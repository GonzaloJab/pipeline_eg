name: Build and Deploy to ECS

on:
  push:
    branches:
      - main  # Trigger the workflow on push to the main branch

# Added by Ai recommendation      
permissions:
  id-token: write
  contents: read

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest  # Use the latest Ubuntu environment for the build

    steps:
      # Step 1: Check out the code from the repository
      - name: Checkout Code
        uses: actions/checkout@v3

      # Step 2: Set up Docker Buildx (Docker multi-platform build)
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      # Step 3: Configure AWS credentials
        
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4 # More information on this action can be found below in the 'AWS Credentials' section
        with:
          role-to-assume: arn:aws:iam::354918374652:role/GITHUB_deploy
          aws-region: ${{ secrets.AWS_REGION }}
  
          
    #  # Step 4: Amazon Login to ECR
    #   - name: Login to Amazon ECR
    #     id: login-ecr
    #     uses: aws-actions/amazon-ecr-login@v2      
      

    #   # Step 5: Deploy to ECS
    #   - name: Deploy to ECS
    #     run: |
    #       # Set variables
    #       CLUSTER_NAME=your-cluster-name  # Replace with your ECS cluster name
    #       SERVICE_NAME=your-service-name  # Replace with your ECS service name
    #       TASK_DEFINITION=your-task-definition  # Replace with your ECS task definition

    #       # Update ECS service to use the new image
    #       aws ecs update-service --cluster $CLUSTER_NAME --service $SERVICE_NAME --force-new-deployment
